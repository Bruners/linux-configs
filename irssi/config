servers = (

  ### IRCNet
  {
    address = "irc.pvv.ntnu.no";
    chatnet = "ircnet";
    port = "6667";
    autoconnect = "no";
  },
  {
    address = "irc.ifi.uio.no";
    chatnet = "ircnet";
    port = "6667";
    autoconnect = "yes";
  },
  {
    address = "irc.hitos.no";
    chatnet = "ircnet";
    port = "6667";
    autoconnect = "no";
  },
  {
    address = "irc.uib.no";
    chatnet = "ircnet";
    port = "6667";
    autoconnect = "no";
  },
  ### EFNet
  {
    address = "irc.homelien.no";
    chatnet = "EFNet";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
  },
  {
    address = "irc.efnet.no";
    chatnet = "EFNet";
    port = "6667";
    autoconnect = "no";
  },
  ### Freenode
  {
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "6667";
    autoconnect = "yes";
  },
  {
    address = "niven.freenode.net";
    chatnet = "freenode";
    port = "6667";
    autoconnect = "no";
  },
  ### Quakenet
  {
    address = "online.no.quakenet.org";
    chatnet = "Quakenet";
    port = "6667";
    autoconnect = "no";
  },
  {
    address = "underworld.no.quakenet.org";
    chatnet = "Quakenet";
    port = "6667";
    autoconnect = "yes";
  },
  ### p2pirc
  {
    address = "irc.p2p-irc.net";
    chatnet = "p2pirc";
    port = "6667";
    autoconnect = "yes";
  },
  {
    address = "irc.p2p-network.net";
    chatnet = "p2pirc";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
  ### s2games
  {
    address = "irc.s2games.com";
    chatnet = "s2games";
    port = "6667";
    use_ssl = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = { 
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  s2games = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
    autosendcmd = "/msg NickServ IDENTIFY password";
  };
  QuakeNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
    autosendcmd = "/msg Q@CServe.quakenet.org AUTH user password";
  };
  p2pirc = {
    type = "IRC";
    autosendcmd = "/msg erica letmein; /msg erica letmeinpre";
  };
  freenode = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "1";
    max_whois = "1";
    autosendcmd = "/msg NickServ IDENTIFY user password";
  };
  SILC = { type = "SILC"; };
};

channels = (
  { name = "#Meloy"; chatnet = "ircnet"; autojoin = "Yes"; },
  { name = "#wowace"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#curseForge"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#wowuidev"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#xmonad"; chatnet = "freenode"; autojoin = "Yes"; }
  { name = "#torrentbytes"; chatnet = "p2pirc"; autojoin = "Yes"; },
  { name = "#torrentbytes-pre"; chatnet = "p2pirc"; autojoin = "Yes"; },
  { name = "#mangler"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#paludis"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#gentoo-chat"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#gentoo-desktop"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#gentoo-haskell"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#exherbo"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#gentoo"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#hon"; chatnet = "s2games"; autojoin = "Yes"; },
  { name = "#quodlibet"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#oss"; chatnet = "freenode"; autojoin = "Yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  cao = "exec -o echo '$*' | bc | awk '{print \"$*=\"$$1}'\\";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        usercount = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "bottom";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    window_act = { disabled = "yes"; };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_2 = {
      items = {
        barstart = { priority = "100"; };
        awl_2 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_3 = {
      items = {
        barstart = { priority = "100"; };
        awl_3 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_4 = {
      items = {
        barstart = { priority = "100"; };
        awl_4 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = {
    override_coredump_limit = "no";
    real_name = "Lasse Brun";
    user_name = "lasseb";
    nick = "Bruners";
    timestamp_format = "%H:%M:%S";
  };
  "irc/core" = {
    ctcp_version_reply = "mIRKSSI v$J";
    skip_motd = "yes";
    alternate_nick = "Brunera";
    usermode = "e";
  };
  "irc/dcc" = { dcc_autoget = "yes"; };
  "fe-common/core" = {
    term_charset = "UTF-8";
    theme = "bruners";
    autolog = "yes";
    bell_beeps = "yes";
    beep_msg_level = "MSGS NOTICES HILIGHT";
    beep_when_away = "yes";
    beep_when_window_active = "yes";
  };
  "perl/core/scripts" = {
    screen_away_nick = "Bruners";
    chanact_remove_hash = "yes";
    chanact_abbreviate_names = "3";
    awl_display_key = "$Q.$H$C$S";
    awl_block = "-20";
    awl_all_disable = "yes";
    awl_display_key_active = "$Q%K|%n$H$C$S%K";
    awl_display_nokey = "$N.$H$C$S";
  };
  "fe-text" = { actlist_sort = "refnum"; term_force_colors = "yes"; };
};
hilights = (
  { text = "Bruners"; nick = "no"; word = "no"; },
  { text = "Lasse Brun"; nick = "no"; word = "no"; }
);


logs = { };
ignores = (
  {
    level = "CRAP SNOTES CTCPS JOINS PARTS QUITS INVITES NICKS DCC DCCMSGS CLIENTNOTICES CLIENTCRAP CLIENTERRORS";
    channels = (
      "#compiz-fusion",
      "#ubuntu",
      "#gentoo",
      "#xorg",
      "#pidgin",
      "#gentoo-chat",
      "#wowuidev-commits",
      "#gentoo-desktop",
      "#paludis",
      "#pulseaudio",
      "#oss",
      "#hon",
      "#quodlibet",
      "#Gentoo-Haskell",
      "#xmonad",
      "#torrentbytes-spam",
      "#torrentbytes"
    );
  },
  { mask = "DCCMSGS"; level = "ALL"; servertag = "freenode"; },
  { mask = "DCC"; level = "ALL"; servertag = "freenode"; },
);
keyboard = (
  { key = "meta-1"; id = "multi"; data = "change_window 1"; },
  { key = "meta-2"; id = "multi"; data = "change_window 2"; },
  { key = "meta-3"; id = "multi"; data = "change_window 3"; },
  { key = "meta-4"; id = "multi"; data = "change_window 4"; },
  { key = "meta-5"; id = "multi"; data = "change_window 5"; },
  { key = "meta-6"; id = "multi"; data = "change_window 6"; },
  { key = "meta-7"; id = "multi"; data = "change_window 7"; },
  { key = "meta-8"; id = "multi"; data = "change_window 8"; },
  { key = "meta-9"; id = "multi"; data = "change_window 9"; },
  { key = "meta-0"; id = "multi"; data = "change_window 10"; },
  { key = "meta-q"; id = "multi"; data = "change_window 11"; },
  { key = "meta-w"; id = "multi"; data = "change_window 12"; },
  { key = "meta-e"; id = "multi"; data = "change_window 13"; },
  { key = "meta-r"; id = "multi"; data = "change_window 14"; },
  { key = "meta-t"; id = "multi"; data = "change_window 15"; },
  { key = "meta-y"; id = "multi"; data = "change_window 16"; },
  { key = "meta-u"; id = "multi"; data = "change_window 17"; },
  { key = "meta-i"; id = "multi"; data = "change_window 18"; },
  { key = "meta-o"; id = "multi"; data = "change_window 19"; },
  { key = "meta-p"; id = "multi"; data = "change_window 20"; },
  { key = "meta-a"; id = "multi"; data = "change_window 21"; },
  { key = "meta-s"; id = "multi"; data = "change_window 22"; },
  { key = "meta-d"; id = "multi"; data = "change_window 23"; },
  { key = "meta-f"; id = "multi"; data = "change_window 24"; },
  { key = "meta-g"; id = "multi"; data = "change_window 25"; },
  { key = "meta-h"; id = "multi"; data = "change_window 26"; },
  { key = "meta-j"; id = "multi"; data = "change_window 27"; },
  { key = "meta-k"; id = "multi"; data = "change_window 28"; },
  { key = "meta-l"; id = "multi"; data = "change_window 29"; },
  { key = "meta-ø"; id = "multi"; data = "change_window 30"; },
  { key = "meta-<"; id = "multi"; data = "change_window 31"; },
  { key = "meta-z"; id = "multi"; data = "change_window 32"; },
  { key = "meta-x"; id = "multi"; data = "change_window 33"; },
  { key = "meta-c"; id = "multi"; data = "change_window 34"; },
  { key = "meta-v"; id = "multi"; data = "change_window 35"; },
  { key = "meta-b"; id = "multi"; data = "change_window 36"; },
  { key = "meta-n"; id = "multi"; data = "change_window 37"; },
  { key = "meta-m"; id = "multi"; data = "change_window 38"; },
  { key = "meta-,"; id = "multi"; data = "change_window 39"; },
  { key = "meta-."; id = "multi"; data = "change_window 40"; },

);
